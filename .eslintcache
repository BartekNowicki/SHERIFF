[{"C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\index.tsx":"1","C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\reportWebVitals.ts":"2","C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\App.tsx":"3","C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\components\\Sheriff.tsx":"4","C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\components\\Bullet.tsx":"5","C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\components\\panel.tsx":"6","C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\components\\Panel.tsx":"7","C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\components\\TargetArea.tsx":"8","C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\assets\\targets\\_targetList.tsx":"9","C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\components\\SoundToggle.tsx":"10","C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\components\\Intro.tsx":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":2591,"mtime":1610646315038,"results":"15","hashOfConfig":"13"},{"size":16249,"mtime":1610646054602,"results":"16","hashOfConfig":"13"},{"size":797,"mtime":1610209602313,"results":"17","hashOfConfig":"13"},{"size":231,"mtime":1610138378970,"results":"18","hashOfConfig":"13"},{"size":524,"mtime":1610558963216,"results":"19","hashOfConfig":"13"},{"size":7517,"mtime":1610565249548,"results":"20","hashOfConfig":"13"},{"size":1592,"mtime":1610207442469,"results":"21","hashOfConfig":"13"},{"size":440,"mtime":1610560026245,"results":"22","hashOfConfig":"13"},{"size":256,"mtime":1610634387693,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"gf4skb",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\index.tsx",[],["48","49"],"C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\reportWebVitals.ts",[],"C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\App.tsx",[],"C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\components\\Sheriff.tsx",["50"],"C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\components\\Bullet.tsx",[],"C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\components\\panel.tsx",[],"C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\components\\Panel.tsx",[],"C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\components\\TargetArea.tsx",["51"],"import { useContext, useEffect, useState } from 'react';\r\nimport { AppStorage } from \"../App\";\r\n\r\nimport { targets } from '../assets/targets/_targetList';\r\nimport { ReactComponent as AppleSvgComponent } from \"../assets/targets/apple.svg\";\r\nimport { ReactComponent as BananaSvgComponent } from \"../assets/targets/banana.svg\";\r\nimport { ReactComponent as BeanSvgComponent } from \"../assets/targets/bean.svg\";\r\nimport { ReactComponent as BeetSvgComponent } from \"../assets/targets/beet.svg\";\r\nimport { ReactComponent as BlueberrySvgComponent } from \"../assets/targets/blueberry.svg\";\r\nimport { ReactComponent as BroccoliSvgComponent } from \"../assets/targets/broccoli.svg\";\r\nimport { ReactComponent as CabbageSvgComponent } from \"../assets/targets/cabbage.svg\";\r\nimport { ReactComponent as CarrotSvgComponent } from \"../assets/targets/carrot.svg\";\r\nimport { ReactComponent as CherrySvgComponent } from \"../assets/targets/cherry.svg\";\r\nimport { ReactComponent as CoconutSvgComponent } from \"../assets/targets/coconut.svg\";\r\nimport { ReactComponent as CornSvgComponent } from \"../assets/targets/corn.svg\";\r\nimport { ReactComponent as CucumberSvgComponent } from \"../assets/targets/cucumber.svg\";\r\nimport { ReactComponent as EggplantSvgComponent } from \"../assets/targets/eggplant.svg\";\r\nimport { ReactComponent as GarlicSvgComponent } from \"../assets/targets/garlic.svg\";\r\nimport { ReactComponent as GrapesSvgComponent } from \"../assets/targets/grapes.svg\";\r\nimport { ReactComponent as LemonSvgComponent } from \"../assets/targets/lemon.svg\";\r\nimport { ReactComponent as MangoSvgComponent } from \"../assets/targets/mango.svg\";\r\nimport { ReactComponent as MelonSvgComponent } from \"../assets/targets/melon.svg\";\r\nimport { ReactComponent as OnionSvgComponent } from \"../assets/targets/onion.svg\";\r\nimport { ReactComponent as OrangeSvgComponent } from \"../assets/targets/orange.svg\";\r\nimport { ReactComponent as PearSvgComponent } from \"../assets/targets/pear.svg\";\r\nimport { ReactComponent as PeasSvgComponent } from \"../assets/targets/peas.svg\";\r\nimport { ReactComponent as PepperSvgComponent } from \"../assets/targets/pepper.svg\";\r\nimport { ReactComponent as PineappleSvgComponent } from \"../assets/targets/pineapple.svg\";\r\nimport { ReactComponent as PumpkinSvgComponent } from \"../assets/targets/pumpkin.svg\";\r\nimport { ReactComponent as RadishSvgComponent } from \"../assets/targets/radish.svg\";\r\nimport { ReactComponent as RaspberrySvgComponent } from \"../assets/targets/raspberry.svg\";\r\nimport { ReactComponent as StrawberrySvgComponent } from \"../assets/targets/strawberry.svg\";\r\nimport { ReactComponent as TomatoSvgComponent } from \"../assets/targets/tomato.svg\";\r\nimport { ReactComponent as WatermelonSvgComponent } from \"../assets/targets/watermelon.svg\";\r\n\r\n\r\nexport const TargetArea = () => {\r\n    const { setTargetDescription } = useContext(AppStorage);\r\n    const itemClassName = \"targetSvg\";\r\n    let initialArray: JSX.Element[] = [];\r\n    const [pickedItems, setPickedItems] = useState(initialArray);\r\n    \r\n    const itemComponents = [\r\n    <AppleSvgComponent className={itemClassName}/>,\r\n    <BananaSvgComponent className={itemClassName}/>,\r\n    <BeanSvgComponent className={itemClassName}/>,\r\n    <BeetSvgComponent className={itemClassName}/>,\r\n    <BlueberrySvgComponent className={itemClassName}/>,\r\n    <BroccoliSvgComponent className={itemClassName}/>,\r\n    <CabbageSvgComponent className={itemClassName}/>,\r\n    <CarrotSvgComponent className={itemClassName}/>,\r\n    <CherrySvgComponent className={itemClassName}/>,\r\n    <CoconutSvgComponent className={itemClassName}/>,\r\n    <CornSvgComponent className={itemClassName}/>,\r\n    <CucumberSvgComponent className={itemClassName}/>,\r\n    <EggplantSvgComponent className={itemClassName}/>,\r\n    <GarlicSvgComponent className={itemClassName}/>,\r\n    <GrapesSvgComponent className={itemClassName}/>,\r\n    <LemonSvgComponent className={itemClassName}/>,\r\n    <MangoSvgComponent className={itemClassName}/>,\r\n    <MelonSvgComponent className={itemClassName}/>,\r\n    <OnionSvgComponent className={itemClassName}/>,\r\n    <OrangeSvgComponent className={itemClassName}/>,\r\n    <PearSvgComponent className={itemClassName}/>,\r\n    <PeasSvgComponent className={itemClassName}/>,\r\n    <PepperSvgComponent className={itemClassName}/>,\r\n    <PineappleSvgComponent className={itemClassName}/>,\r\n    <PumpkinSvgComponent className={itemClassName}/>,\r\n    <RadishSvgComponent className={itemClassName}/>,\r\n    <RaspberrySvgComponent className={itemClassName}/>,\r\n    <StrawberrySvgComponent className={itemClassName}/>,\r\n    <TomatoSvgComponent className={itemClassName}/>,\r\n    <WatermelonSvgComponent className={itemClassName}/>,\r\n    ];\r\n\r\n    const targetClassNames = () => {\r\n        const colorOptions = [\"green\", \"blue\", \"red\", \"yellow\", \"brown\", \"white\", \"gray\"];\r\n        const baseClass = [\"target\"];\r\n        return `${baseClass[0]} ${colorOptions[Math.floor(Math.random() * colorOptions.length)]}`;\r\n    }\r\n    \r\n    const pickTargetDescription = (candidates: JSX.Element[]) => {\r\n        const randomNumber = Math.floor(Math.random() * candidates.length);\r\n        const propsObj = candidates[randomNumber].props;\r\n        // console.log(propsObj);   \r\n        //STRUCTURE OF PROPSOBJ: className: \"target blue\", data-name: \"watermelon\"\r\n        const color = String(Object.values(propsObj)[0]).slice(7);\r\n        const type = Object.values(propsObj)[1];\r\n        // console.log(color, type);\r\n        if (Math.random() >= 0.5) return type\r\n        return color\r\n    }\r\n    \r\n    const pickThreeItemComponents = () => { \r\n        let randomNumbers = [];\r\n        let pickedItemComponents: JSX.Element[] = [];\r\n        const i = Math.floor(Math.random() * itemComponents.length);\r\n        const j = Math.floor(Math.random() * itemComponents.length);\r\n        const k = Math.floor(Math.random() * itemComponents.length);\r\n        if (i !== j && j !==k && i !== k) {\r\n            randomNumbers = [i, j, k];\r\n        } else randomNumbers = [1, 2, 3];    \r\n        const positions = ['left', 'center', 'right'];\r\n        for (let x = 0; x<3; x++) {            \r\n            let randomNumber = randomNumbers[x];\r\n            pickedItemComponents.push(\r\n                <div ref={element => {showIt(element)}}\r\n                key = {targets[randomNumber].id}\r\n                className = {targetClassNames()}\r\n                data-name = {targets[randomNumber].name}\r\n                data-position = {positions[x]}>\r\n                {itemComponents[randomNumber]}\r\n                </div>\r\n            );\r\n        }\r\n        return pickedItemComponents;\r\n    }\r\n    \r\n    const showIt = (el:any) => {\r\n        if(!el) return\r\n        // console.log(el.dataset.name);\r\n    };\r\n\r\n    \r\n    let pickedTargetFeatureForDisplay: any = '';\r\n\r\n    const getNewTargets = () => {\r\n        const newTargets = pickThreeItemComponents();\r\n        setPickedItems(newTargets);\r\n        pickedTargetFeatureForDisplay = pickTargetDescription(newTargets);\r\n        setTargetDescription(pickedTargetFeatureForDisplay);\r\n    }\r\n        \r\n    useEffect(() => {\r\n        getNewTargets();\r\n        const targetsChangeInterval = setInterval(() => {\r\n            console.log('CLICK INTERVAL');\r\n            getNewTargets();\r\n        }, 4000);  \r\n\r\n        return () => {\r\n             clearInterval(targetsChangeInterval);\r\n          };        \r\n    }, []);    \r\n \r\n    return (\r\n    <section className = \"targetArea\" data-name = 'targetArea'>\r\n        {pickedItems}\r\n    </section>\r\n    )\r\n}\r\n","C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\assets\\targets\\_targetList.tsx",[],"C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\components\\SoundToggle.tsx",[],"C:\\Users\\Bartek\\Desktop\\MEDEVPROJECTS\\sheriff\\src\\components\\Intro.tsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":12,"column":12,"nodeType":"58","messageId":"59","endLine":12,"endColumn":29},{"ruleId":"60","severity":1,"message":"61","line":144,"column":8,"nodeType":"62","endLine":144,"endColumn":10,"suggestions":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"@typescript-eslint/no-unused-vars","'sheriffClickCount' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNewTargets'. Either include it or remove the dependency array.","ArrayExpression",["66"],"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [getNewTargets]",{"range":"69","text":"70"},[7376,7378],"[getNewTargets]"]